@startuml is001_regardApplicationCausesInquiringServiceRecords
skinparam responseMessageBelowArrow true

title
RegardApplicationCausesSequenceForInquiringServiceRecords
end title

participant "RO" as ro
participant "EaTL://v1/regard-application" as eatl
participant "ALT://v1/add-operation-client-to-link" as alt
participant "newApplicationName://v1/redirect-service-request-information" as newApplicationFuture

ro -> eatl : {newApplicationName, releaseNumber, protocol, address, port} (apiKey)
activate eatl

note over eatl
<u>CreateLinkForInquiringServiceRecords</u>
Request for automatically creating the Link:
EaTL => newApplicationName://v1/redirect-service-request-information
end note
eatl -> alt : { servingApplicationName == requestBody.newApplicationName,\n servingApplicationReleaseNumber == requestBody.releaseNumber,\n operationName == /v1/redirect-service-request-information,\n consumingApplicationName == ExecutionAndTraceLog,\n consumingApplicationReleaseNumber == 2.1.0 } (apiKey)
eatl <-- alt : {client-successfully-added, reason-of-failure}

note left eatl
IF (NOT 200) OR (client-successfully-added==false)
end note
ro <-- eatl : { successfully-connected==false,  reason-of-failure}

note over eatl
ELSE
end note

note over eatl
<u>CreateLinkForSendingServiceRecords</u>
Request for automatically creating the Link:
newApplication => EaTL://v1/record-service-request
end note
eatl -> alt : { servingApplicationName == ExecutionAndTraceLog,\n servingApplicationReleaseNumber == 2.1.0,\n operationName == /v1/record-service-request,\n consumingApplicationName == requestBody.newApplicationName,\n consumingApplicationReleaseNumber == requestBody.releaseNumber } (apiKey)
eatl <-- alt : {client-successfully-added, reason-of-failure}

note left eatl
IF (NOT 200) OR (client-successfully-added==false)
end note
ro <-- eatl : { successfully-connected==false,  reason-of-failure}

note over eatl
ELSE
end note

note over eatl
<u>RequestForInquiringServiceRecords</u>
Request for sending
service records in future
end note
eatl -> newApplicationFuture : {loggingApplication, releaseNumber, loggingService, protocol, address, port} (apiKey)
eatl <-- newApplicationFuture : 204

note left eatl
IF 204
end note
ro <-- eatl : { successfully-connected==true }

note left eatl
IF (NOT 204)
end note
ro <-- eatl : { successfully-connected==false,  reason-of-failure}

deactivate eatl

@enduml